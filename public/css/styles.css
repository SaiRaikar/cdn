/*!
* My Custom Styles
*
* START
 */





 .justcreated {
  color:rgb(179, 179, 179);
  background-color:rgb(0, 0, 0);
  text-align: left;
}
 .editing {
  color:rgb(0, 174, 255);
  background-color:black;
  text-align: left;
}
.reviewing {
  color:yellow;
  background-color:black;
  text-align: left;
}
.submitted {
  color:rgb(255, 153, 0);
  background-color:black;
  text-align: left;
}
.prcessed {
  color:#e3342f;
  background-color:black;
  text-align: left;
}
.completed {
  color:#38c172;
  background-color:rgb(0, 0, 0);
  text-align: left;
}

.ahmedsulaimani {
  color:#646464;
  background-color:rgb(0, 0, 0);
  text-align: left;
}





.makki {

  color:#1e1c4b;
  background-color:rgb(138, 138, 138);
  text-align: left;
}




















:root {
  /* theme color variables to use in RGB declarations */
  --red: 200;
  --green: 60;
  --blue: 255;
  /* the threshold at which colors are considered "light". 
  Range: decimals from 0 to 1, recommended 0.5 - 0.6 */
  --threshold: 0.5;
  /* the threshold at which a darker border will be applied.
  Range: decimals from 0 to 1, recommended 0.8+ */
  --border-threshold: 0.8;
}

.lt1000 {
  /* sets the background for the base class */
  background: rgb(var(--red), var(--green), var(--blue));

  /* calculates perceived lightness using the sRGB Luma method 
  Luma = (red * 0.2126 + green * 0.7152 + blue * 0.0722) / 255 */
  --r: calc(var(--red) * 0.2126);
  --g: calc(var(--green) * 0.7152);
  --b: calc(var(--blue) * 0.0722);
  --sum: calc(var(--r) + var(--g) + var(--b));
  --perceived-lightness: calc(var(--sum) / 255);
  
  /* shows either white or black color depending on perceived darkness */
  color: hsl(0, 0%, calc((var(--perceived-lightness) - var(--threshold)) * -10000000%)); 
}

.lt10000 {
  /* sets the background for the base class */
  background: rgb(var(--red), var(--green), var(--blue));

  /* calculates perceived lightness using the sRGB Luma method 
  Luma = (red * 0.2126 + green * 0.7152 + blue * 0.0722) / 255 */
  --r: calc(var(--red) * 0.2126);
  --g: calc(var(--green) * 0.7152);
  --b: calc(var(--blue) * 0.0722);
  --sum: calc(var(--r) + var(--g) + var(--b));
  --perceived-lightness: calc(var(--sum) / 255);
  
  /* shows either white or black color depending on perceived darkness */
  color: hsl(0, 0%, calc((var(--perceived-lightness) - var(--threshold)) * -10000000%)); 
}


.style {
  opacity: -2; /* resolves to 0, transparent */
  opacity: -1; /* resolves to 0, transparent */
  opacity: 2; /*resolves to 1, fully opaque */
  opacity: 100; /* resolves to 1, fully opaque */
}


































.inline-form {
  display: inline;
  flex-flow: row wrap;
  align-items: left;

}



 /*
 .form-inline {  
   display: flex;
   flex-flow: row wrap;
   align-items: left;

 }
 */




 
 .form-inline label {
  margin: 5px 0px 0px 0;
}
 
 .form-inline input {
   vertical-align: middle;
   margin: 5px 0px 0px 0;
   padding: 10px;
   background-color: #fff;
   border: 1px solid #ddd;
 }
 
 .form-inline button {
   padding: 10px 20px;
   background-color: dodgerblue;
   border: 1px solid #ddd;
   color: white;
   cursor: pointer;
 }
 
 .form-inline button:hover {
   background-color: royalblue;
 }

 /*
 
 @media (max-width: 2px) {
   .form-inline input {
     margin: 10px 0;
   }
   
   .form-inline {
     flex-direction: column;
     align-items: stretch;
   }
 }
*/



 @media (min-width: 522px) {
.form-inline .form-control1 {
    display: inline-block;
    width: 480px;
    vertical-align: middle;
    display:block;width:50%;height:calc(2.19rem + 2px);padding:.375rem .75rem;font-size:.9rem;line-height:1.6;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;
  }
}

@media (min-width: 52px) {
  .form-inline .form-control2 {
      display: inline-block;
      width: 80px;
      vertical-align: middle;
      display:block;width:12%;height:calc(2.19rem + 2px);padding:.375rem .75rem;font-size:.9rem;line-height:1.6;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;

    }
  }
  
  .blur {
    text-align: center;
    color: black;
    filter: blur(2px);
    -webkit-filter: blur(2px);
  }

  
  .centered {
    position: absolute;
    top: 160;
    left: 50%;
    transform: translate(-50%, -50%);
    /* padding: 4px 3px 4px 44px; */
    width: -webkit-fill-available;
}



.newspaper {
  -webkit-column-count: 3; /* Chrome, Safari, Opera */
  -moz-column-count: 3; /* Firefox */
  column-count: 3;

  -webkit-column-gap: 40px; /* Chrome, Safari, Opera */
  -moz-column-gap: 40px; /* Firefox */
  column-gap: 40px;
}




/** COUNTER */



/** COUNTER */


.text-box {

  padding-left:6px;
  padding-right:6px;
  color:white;
  background:rgba(49, 50, 51, 0.700);
  font-weight: 700;
  font-size:12px;
  width: -webkit-fill-available;

}





 #myInput {
    background-image: url('{{ asset(`image/searchicon.png`) }}'); /* Add a search icon to input */
    background-position: 10px 12px; /* Position the search icon */
    background-repeat: no-repeat; /* Do not repeat the icon image */
    width: 100%; /* Full-width */
    font-size: 16px; /* Increase font-size */
    padding: 12px 20px 12px 40px; /* Add some padding */
    border: 1px solid #ddd; /* Add a grey border */
    margin-bottom: 12px; /* Add some space below the input */
  }
  
  #myTable th, #myTable td {
    text-align: left; /* Left-align text */
    padding-left: 0px; /* Add padding */
    border: 1.5px solid rgb(189, 189, 189); /* Add a grey border */

  }
  
  #myTable tr {
    /* Add a bottom border to all table rows */
    border-bottom: 1.5px solid rgb(95, 95, 95); 
    padding-left: 4px;
    padding-right: 4px;
  }

  #myTable {
    border-collapse: collapse;
    width: 100%;
    border: 1px solid rgb(97, 97, 97);
    color: rgb(97, 97, 97);
    background-color: white;
    font-size: 8px;

}

#myTable .dark {
  border-collapse: collapse;
  width: 100%;
  border: 1px solid rgb(97, 97, 97);
  font-size: 10px;
  color: rgb(179, 179, 179);

}

#items.dark {
  border-collapse: collapse;
  width: 100%;
  border: 1px solid rgb(97, 97, 97);
  font-size: 12px;
  color: rgb(255, 255, 255);
  padding-left: 4px;
  padding-right: 4px;
}

#myTP {
    border-collapse: collapse;
    width: 100%;
    border: 1px solid rgb(104, 104, 104);
    font-size: 10px;
    background-color: green;


}

#myTP.processed {
  border-collapse: collapse;
  width: 100%;
  border: 1px solid rgb(97, 97, 97);
  font-size: 10px;
  color: rgb(0, 0, 0);
  background-color: green;
}


#myTable tbody tr {
  
  text-align: left;
}


#myDarkTable {

  background-color: #1b1d1f;
  color: rgb(97, 97, 97);
  border-collapse: collapse;
  width: 100%;
  border: 2px solid rgb(255, 94, 0);
  font-size: 8px;
}

#myDarkTable tbody tr {
  
  text-align: left;
}


  
#myDarkTable th, #myDarkTable td {
  text-align: left; /* Left-align text */
  padding-left: 0px; /* Add padding */
  border: 1.5px solid rgb(189, 189, 189); /* Add a grey border */

}

#myDarkTable tr {
  /* Add a bottom border to all table rows */
  border-bottom: 1.5px solid rgb(95, 95, 95); 
  padding-left: 4px;
  padding-right: 4px;
}

#myDarkTable tr.header, #myDarkTable th:hover tr:hover {
  /* Add a grey background color to the table header and on hover */
  background-color: #000000;
  color: rgb(255, 255, 255);
  border: 2px dotted #fc9230;
}


#myTable tr.header, #myTable th:hover tr:hover {
    /* Add a grey background color to the table header and on hover */
    background-color: #000000;
    color: rgb(255, 255, 255);
    border: 2px dotted #fc9230;
  }
  
  input[type=checkbox], input[type=radio] {
    margin-bottom: 22.5px;
    margin-top: 22.5px;
    line-height: normal;
    padding-left: inherit;
    vertical-align:top;
  
  
  }
  
  
  input {
   display: inline-block;
  }
  
  fieldset {
   display: inline;
   padding: 0;
   margin: 0
  }
  input[type="checkbox"].selectedId, #selectall {
  line-height: normal;
  margin: 0;
  float: none;
  }
  .checkbox {
  margin: 0;
  float: none;
  }
  button, input, optgroup, select, textarea {
  
      /* margin: 0; */
      font: inherit;
      color: inherit;
  }
  
  table.checkboxs {
      display:inline-block;
      vertical-align:middle;
  }
  
  input[type="text"] {
  }
  /**Collapse*/
  .collapsible {
    background-color: #ddd;
    color: black;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;
  }
  
  .active, .collapsible:hover {
    background-color: #222;
    color: white;
  }
  
  .content {
    padding: 0 2px;
    display: none;
    overflow: hidden;
    background-color: #7c7c7c;
  
      overflow-x: hidden;
  }
  /*!
  * My Custom Styles
  *
  * END
   */